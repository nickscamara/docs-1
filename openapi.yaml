openapi: 3.0.0
info:
  version: 1.0.0
  title: Psychic API
  description: The API reference for Psychic's hosted service
servers:
- url: https://api.psychic.dev
#----------------PATHS---------------
paths:
  /get-connections:
    post:
      description: Fetches all Connections and their associated metadata
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                filter:
                  type: object
                  properties:
                    connector_id:
                      type: string
                    account_id:
                      type: string
      responses:
        '200':
          description: Successfully retrieved a list of connections
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Connection"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
  /get-connector-status:
    post:
      description: Returns whether a connector is enabled and all accounts connected to it
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - connector_id
              properties:
                connector_id:
                  type: string
      responses:
        '200':
          description: Successfully retrieved a connector
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      is_enabled: 
                        type: boolean
                      connections: 
                        type: array
                        items:
                          $ref: "#/components/schemas/Connection"          
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
  /get-documents:
    post:
      description: Returns all Documents for a given account and connector
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - connector_id
                - account_id
              properties:
                connector_id:
                  type: string
                account_id:
                  type: string
      responses:
        '200':
          description: Successfully retrieved documents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Document"      
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
  /get-conversations:
    post:
      description: Returns all Conversations for a given account and connector
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - connector_id
                - account_id
              properties:
                connector_id:
                  type: string
                account_id:
                  type: string
                oldest_timestamp:
                  type: integer
                  description: How far back to retrieve messages. Will retrieve messages from the past 24 hours if not provided.
      responses:
        '200':
          description: Successfully retrieved Conversations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Conversation"      
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
  /ask-question:
    post:
      description: Uses vector based retrieval to answer a question using connected Documents as context. Takes a long time to run so a limit of 350,000 tokens worth of context is enforced.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - question
                - account_id
                - openai_api_key
              properties:
                question:
                  type: string
                  description: The question to ask. Should be given as a query ending in "?" or a request.
                connector_ids:
                  type: array
                  items:
                    type: string
                  description: A list of `connector_id`s to use as context. If empty, will attempt to use Documents from all data sources with at least one Connection.
                openai_api_key:
                  type: string
                  description: An OpenAI API key. used to generate embeddings and request completions from OpenAI's API.
                account_id:
                  type: string
                  description: The Account to search through. The `ask-question` endpoint can use only Documents belonging to the same Account as context.
      responses:
        '200':
          description: Successfully returned a response to the question
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QuestionResponse"      
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
#----------------COMPONENTS---------------
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    Connection:
      type: object
      required:
        - account_id
        - connector_id
      properties:
        account_id:
          type: string
        connector_id:
          type: string
        metadata:
          type: object
    Document:
      type: object
      required:
        - title
        - content
        - uri
      properties:
        title:
          type: string
        content:
          type: string
        uri:
          type: object
    Conversation:
      type: object
      required:
        - messages
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/Message"
        channel:
          type: object
          properties:
            name:
              type: string
            id:
              type: string
    Message:
      type: object
      required:
        - id
        - sender
        - content
      properties:
        id:
          type: string
        sender:
          $ref: "#/components/schemas/MessageSender"
        content:
          type: string
        timestamp:
          type: integer
        replies:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              sender:
                $ref: "#/components/schemas/MessageSender"
              content:
                type: string
              timestamp:
                type: integer
              replies:
                type: array
                items:
                  type: object
        uri:
          type: string
    MessageSender:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    QuestionResponse:
      type: object
      properties:
        answer:
          type: string
        sources:
          type: array
          items:
            type: string
    BadRequest:
      type: object
      properties:   
        message:
          type: string
security:
  - BearerAuth: []